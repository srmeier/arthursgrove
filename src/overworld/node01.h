//-----------------------------------------------------------------------------
#ifndef _NODE01_HEADER_
#define _NODE01_HEADER_

/* node01.h */
//-----------------------------------------------------------------------------
/*
*/
class Node01: public WorldNode {
protected:
	SignEntity* _sign;
	Npc02Entity* _miners[4];
	BarrelEntity* _barrelEnt;

	void _drawEntities(void);

public:
	Node01(void);
	~Node01(void);

	void update(void);

	Entity* getEntityAt(int i, int j);
};

/* node01.cpp */
//-----------------------------------------------------------------------------
/*
*/
Node01::Node01(void) {
	int tiles[15][20] = {
		{0x08,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x0E,0x09},
		{0x0C,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x16,0x0D},
		{0x0A,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0B},
		{0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E},
		{0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E},
		{0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E},
		{0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E},
		{0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32,0x32},
		{0x07,0x07,0x07,0x07,0x7E,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x80,0x87,0x88,0x88,0x89,0x07},
		{0x07,0x86,0x07,0x07,0x7D,0x85,0x85,0x85,0x85,0x85,0x85,0x85,0x85,0x85,0x81,0x07,0x07,0x07,0x07,0x07},
		{0x07,0x07,0x07,0x07,0x7D,0x85,0x85,0x85,0x85,0x85,0x85,0x85,0x85,0x85,0x81,0x07,0x07,0x07,0x07,0x07},
		{0x07,0x07,0x07,0x07,0x7D,0x85,0x85,0x85,0x85,0x85,0x85,0x85,0x85,0x85,0x81,0x07,0x86,0x07,0x07,0x07},
		{0x07,0x07,0x07,0x07,0x84,0x83,0x83,0x83,0x83,0x83,0x83,0x83,0x83,0x83,0x82,0x07,0x07,0x07,0x07,0x07},
		{0x07,0x07,0x86,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07},
		{0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x07}
	};

	for(int j=0; j<15; j++) {
		for(int i=0; i<20; i++) {
			_background[j][i] = tiles[j][i];
		}
	}

	char str[] =\
		"Sign                     ";
	_sign = new SignEntity(16*5, 16*11, str);

	_barrelEnt = new BarrelEntity(16*17, 16*8, SpriteID::BARREL00);

	for(int i=0; i<2; i++) {
		_miners[i] = new Npc02Entity(16*3+16*(i+1), 16*8);
	}

	_miners[2] = new Npc02Entity(16*3+16*(4+1), 16*8+16*3);
	_miners[3] = new Npc02Entity(16*3+16*(12+1), 16*8);
}

//-----------------------------------------------------------------------------
/*
*/
Node01::~Node01(void) {
	delete _sign;
	delete _barrelEnt;

	for(int i=0; i<4; i++) {
		delete _miners[i];
	}
}

//-----------------------------------------------------------------------------
/*
*/
void Node01::_drawEntities(void) {
	for(int i=0; i<4; i++) {
		_miners[i]->draw();
	}

	_sign->draw();
	_barrelEnt->draw();
}

//-----------------------------------------------------------------------------
/*
*/
void Node01::update(void) {
	WorldNode::update();

	for(int i=0; i<4; i++) {
		_miners[i]->update();
	}

	_sign->update();
	_barrelEnt->update();
}

//-----------------------------------------------------------------------------
/*
*/
Entity* Node01::getEntityAt(int i, int j) {
	int si = _sign->getI();
	int sj = _sign->getJ();
	if(i==si&&j==sj) return _sign;

	int bi = _barrelEnt->getI();
	int bj = _barrelEnt->getJ();
	if(i==bi&&j==bj) return _barrelEnt;

	for(int _i=0; _i<4; _i++) {
		int ni = _miners[_i]->getI();
		int nj = _miners[_i]->getJ();
		if(i==ni&&j==nj) return _miners[_i];
	}

	return NULL;
}

#endif
